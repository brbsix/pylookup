#!/bin/bash
#
# bash completion file for pylookup


__pylookup(){
    # local msgs=$(pylint --list-msgs 2>/dev/null | awk '/^:/ { sub("^:", "", $1); print $1 }' | sort)
    local msgs=$(cat <<-EOF
		abstract-class-instantiated
		abstract-method
		access-member-before-definition
		anomalous-backslash-in-string
		anomalous-unicode-escape-in-string
		arguments-differ
		assert-on-tuple
		assigning-non-slot
		assignment-from-none
		assignment-from-no-return
		astroid-error
		attribute-defined-outside-init
		bad-builtin
		bad-classmethod-argument
		bad-context-manager
		bad-continuation
		bad-exception-context
		bad-except-order
		bad-format-character
		bad-format-string
		bad-format-string-key
		bad-indentation
		bad-inline-option
		bad-mcs-classmethod-argument
		bad-mcs-method-argument
		bad-open-mode
		bad-option-value
		bad-reversed-sequence
		bad-staticmethod-argument
		bad-str-strip-call
		bad-super-call
		bad-whitespace
		bare-except
		binary-op-exception
		blacklisted-name
		boolean-datetime
		broad-except
		catching-non-exception
		cell-var-from-loop
		cyclic-import
		dangerous-default-value
		deprecated-module
		deprecated-pragma
		duplicate-argument-name
		duplicate-code
		duplicate-key
		empty-docstring
		eval-used
		exec-used
		expression-not-assigned
		fatal
		file-ignored
		fixme
		format-combined-specification
		format-needs-mapping
		function-redefined
		global-at-module-level
		global-statement
		global-variable-not-assigned
		global-variable-undefined
		ignored-builtin-module
		import-error
		import-self
		inherit-non-class
		init-is-generator
		interface-is-not-class
		interface-not-implemented
		invalid-all-object
		invalid-characters-in-docstring
		invalid-format-index
		invalid-name
		invalid-sequence-index
		invalid-slice-index
		invalid-slots
		invalid-slots-object
		line-too-long
		locally-disabled
		locally-enabled
		logging-format-interpolation
		logging-format-truncated
		logging-not-lazy
		logging-too-few-args
		logging-too-many-args
		logging-unsupported-format
		lost-exception
		method-check-failed
		method-hidden
		missing-docstring
		missing-final-newline
		missing-format-argument-key
		missing-format-attribute
		missing-format-string-key
		missing-interface-method
		missing-kwoa
		missing-module-attribute
		missing-reversed-argument
		mixed-format-string
		mixed-indentation
		mixed-line-endings
		multiple-statements
		no-init
		no-member
		no-method-argument
		no-name-in-module
		nonexistent-operator
		non-iterator-returned
		non-parent-init-called
		no-self-argument
		no-self-use
		not-callable
		notimplemented-raised
		not-in-loop
		no-value-for-parameter
		parse-error
		pointless-except
		pointless-statement
		pointless-string-statement
		protected-access
		raising-bad-type
		raising-non-exception
		raw-checker-failed
		redefined-builtin
		redefined-outer-name
		redefine-in-handler
		redundant-keyword-arg
		redundant-unittest-assert
		reimported
		return-in-init
		return-outside-function
		signature-differs
		superfluous-parens
		super-init-not-called
		suppressed-message
		syntax-error
		too-few-format-args
		too-few-public-methods
		too-many-ancestors
		too-many-arguments
		too-many-branches
		too-many-format-args
		too-many-function-args
		too-many-instance-attributes
		too-many-lines
		too-many-locals
		too-many-public-methods
		too-many-return-statements
		too-many-statements
		trailing-whitespace
		truncated-format-string
		unbalanced-tuple-unpacking
		undefined-all-variable
		undefined-loop-variable
		undefined-variable
		unexpected-keyword-arg
		unexpected-line-ending-format
		unidiomatic-typecheck
		unnecessary-lambda
		unnecessary-pass
		unnecessary-semicolon
		unpacking-non-sequence
		unreachable
		unrecognized-inline-option
		unresolved-interface
		unused-argument
		unused-format-string-argument
		unused-format-string-key
		unused-import
		unused-variable
		unused-wildcard-import
		used-before-assignment
		useless-else-on-loop
		useless-suppression
		wildcard-import
		wrong-spelling-in-comment
		wrong-spelling-in-docstring
		yield-outside-function
	EOF
    )

    COMPREPLY=( $( compgen -W "$msgs" -- "${COMP_WORDS[COMP_CWORD]}" ) )
}

for i in pylookup pylookup.py; do
    if hash "$i" &>/dev/null; then
        complete -F __pylookup "$i"
    fi
done

unset i
